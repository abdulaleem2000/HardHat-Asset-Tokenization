{
  "address": "0x5Ff135846589d6B492c1928541d0F0bD7FE68f27",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "direction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "grossAnnualRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "netAmountRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestPayment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "homeInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AssetDetails",
          "name": "assetInfo",
          "type": "tuple"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_query",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_tokensPurchase",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "addInvestments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "assetDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "direction",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "grossAnnualRent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "netAmountRent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minInvestment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "homeInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetIds",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_query",
          "type": "string"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "details",
      "outputs": [
        {
          "internalType": "string",
          "name": "secMarket",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "currency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neighood",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "yoc",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "elevator",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "buildedSurface",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bedrooms",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bathrooms",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "isRented",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dateCreated",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAssetDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "direction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "grossAnnualRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "netAmountRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestPayment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "homeInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetDetails[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "secMarket",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neighood",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "yoc",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "elevator",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "buildedSurface",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bedrooms",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bathrooms",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "isRented",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dateCreated",
              "type": "string"
            }
          ],
          "internalType": "struct Details[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_query",
          "type": "string"
        }
      ],
      "name": "getAssetDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "direction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "grossAnnualRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "netAmountRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestPayment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "homeInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenPurchase",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "query",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "internalType": "struct InvestmentDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investmentIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenPurchase",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "query",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investmentsArray",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenPurchase",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "query",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "direction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "grossAnnualRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "netAmountRent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestPayment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "homeInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetDetails",
          "name": "assetInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "secMarket",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neighood",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "yoc",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "elevator",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "buildedSurface",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bedrooms",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bathrooms",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "isRented",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dateCreated",
              "type": "string"
            }
          ],
          "internalType": "struct Details",
          "name": "assetInfo2",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextInvestmentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPriceInMatics",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2afa4faa9863543b571572ebb979dbcb577ac33c620067971ea925d3df6bccfd",
  "receipt": {
    "to": null,
    "from": "0x7fD4f0C61B2aebb92B018C5B3D36c30981E7FA80",
    "contractAddress": "0x5Ff135846589d6B492c1928541d0F0bD7FE68f27",
    "transactionIndex": 13,
    "gasUsed": "4180332",
    "logsBloom": "0x
    "blockHash": "0x1e841e550466a8712d4e65681e5bf7f4571bfc6dadea985355e1ef81b6fd826c",
    "transactionHash": "0x2afa4faa9863543b571572ebb979dbcb577ac33c620067971ea925d3df6bccfd",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 43569203,
        "transactionHash": "0x2afa4faa9863543b571572ebb979dbcb577ac33c620067971ea925d3df6bccfd",
        "address": "0x5Ff135846589d6B492c1928541d0F0bD7FE68f27",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007fd4f0c61b2aebb92b018c5b3d36c30981e7fa80"
        ],
        "data": "0x00000000000000000000000000000000000000000000021e19e0c9bab2400000",
        "logIndex": 27,
        "blockHash": "0x1e841e550466a8712d4e65681e5bf7f4571bfc6dadea985355e1ef81b6fd826c"
      },
      {
        "transactionIndex": 13,
        "blockNumber": 43569203,
        "transactionHash": "0x2afa4faa9863543b571572ebb979dbcb577ac33c620067971ea925d3df6bccfd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007fd4f0c61b2aebb92b018c5b3d36c30981e7fa80",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000216a7a22c689600000000000000000000000000000000000000000000000000282c88739afabe5000000000000000000000000000000000000000000001256eeea5d0eeb18fc4200000000000000000000000000000000000000000000000002615e0d16e92285000000000000000000000000000000000000000000001256ef0bc7890ddf85a2",
        "logIndex": 28,
        "blockHash": "0x1e841e550466a8712d4e65681e5bf7f4571bfc6dadea985355e1ef81b6fd826c"
      }
    ],
    "blockNumber": 43569203,
    "cumulativeGasUsed": "4998824",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "bat coin",
    "bat",
    10000
  ],
  "numDeployments": 13,
  "solcInputHash": "e1e7144f8f5dc72d17c723d64a7760b5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"direction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAnnualRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netAmountRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AssetDetails\",\"name\":\"assetInfo\",\"type\":\"tuple\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_query\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokensPurchase\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"addInvestments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"assetDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"direction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAnnualRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netAmountRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetIds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_query\",\"type\":\"string\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"details\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"secMarket\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neighood\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"yoc\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"buildedSurface\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bedrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bathrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"isRented\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateCreated\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAssetDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"direction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAnnualRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netAmountRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"secMarket\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neighood\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"yoc\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"buildedSurface\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bedrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bathrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"isRented\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateCreated\",\"type\":\"string\"}],\"internalType\":\"struct Details[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_query\",\"type\":\"string\"}],\"name\":\"getAssetDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"direction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAnnualRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netAmountRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenPurchase\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"internalType\":\"struct InvestmentDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenPurchase\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentsArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenPurchase\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"direction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAnnualRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netAmountRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetDetails\",\"name\":\"assetInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"secMarket\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neighood\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"yoc\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"buildedSurface\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bedrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bathrooms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"isRented\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateCreated\",\"type\":\"string\"}],\"internalType\":\"struct Details\",\"name\":\"assetInfo2\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextInvestmentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPriceInMatics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NewToken.sol\":\"AssetNewToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"contracts/NewToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n// Struct to represent asset details\\nstruct AssetDetails {\\n    string name;\\n    string direction;\\n    uint256 amount;\\n    uint256 amountInterest;\\n    uint256 grossAnnualRent;\\n    uint256 netAmountRent;\\n    uint256 interestPayment;\\n    uint256 numberOfTokens;\\n    uint256 tokenPrice;\\n    uint256 minInvestment;\\n    uint256 homeInterest;\\n    uint256 deadline;\\n    \\n}\\n\\nstruct Details {\\n    string secMarket;\\n    string currency;\\n    string neighood;\\n    string yoc;\\n    string elevator;\\n    string buildedSurface;\\n    string bedrooms;\\n    string bathrooms;\\n    string isRented;\\n    string tokenName;\\n    string description;\\n    string dateCreated; \\n}\\n\\nstruct InvestmentDetails{\\n    uint256 tokenPurchase;\\n    string query;\\n    address userAddress;\\n}\\n\\n// AssetToken represents the tokenized version of a real-world asset\\ncontract AssetNewToken is ERC20 {\\n    // Address of the custodian who holds the underlying asset\\n    //address public custodian;\\n    address immutable owner;\\n    uint256 public tokenPriceInMatics;\\n    //uint256 decimals = 18;\\n    uint256 public totalAssets;\\n    // Mapping from token ID to asset details\\n    mapping(string => AssetDetails) public assetDetails;\\n    mapping(string => Details) public details;\\n\\n    mapping(uint256 => InvestmentDetails) public investments;\\n    uint256 public nextInvestmentId = 1;\\n    mapping(uint256 => InvestmentDetails)[] public investmentsArray;\\n    string[] public assetIds;\\n    uint256[] public investmentIds;\\n    //AssetDetails [] public assetDetails;\\n\\n    // Event to notify when tokens are minted (created)\\n    event Mint(address indexed to, uint256 amount, AssetDetails assetInfo);\\n\\n    // Event to notify when tokens are burned (destroyed)\\n    event Burn(address indexed from, uint256 amount);\\n\\n    // Modifier to ensure that only the custodian can execute a function\\n    // modifier onlyCustodian() {\\n    //     require(msg.sender == custodian, \\\"Not the custodian\\\");\\n    //     _;\\n    // }\\n\\n    // Modifier to ensure that only the owner can execute a function\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not the owner\\\");\\n        _;\\n    }\\n\\n\\n\\n    // Constructor initializes the ERC20 token\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _initialSupply\\n    ) ERC20(_name, _symbol) {\\n       \\n        owner = msg.sender;\\n        // Mint initial supply to the custodian\\n        totalAssets = 0;\\n        _mint(msg.sender, _initialSupply * 10**18);\\n    }\\n\\n    // function getTokenPriceInDollars() public view returns(uint256)  {\\n    //     return tokenPriceInDollars;\\n//     // }\\n// function getValueWithDecimal(uint256 value) public pure returns (uint256) {\\n//         // Assume one decimal place\\n//         return value / 10;\\n//     }\\n    // Mint new tokens when the custodian creates more tokens (asset appreciation, for example)\\n    function mint(\\n        AssetDetails memory assetInfo,\\n        Details memory assetInfo2\\n    ) external onlyOwner {\\n       \\n        bytes memory bytesName = bytes(assetInfo.name);\\n        bytes memory bytesDirection = bytes(assetInfo.direction);\\n\\n        bytes memory concatenated = abi.encodePacked(bytesName, bytesDirection);\\n        string memory result = string(concatenated);\\n\\n        totalAssets += 1;\\n        // uint256 value = getValueWithDecimal(assetInfo.tokenPrice);\\n        // assetInfo.tokenPrice = value;\\n        //uint256 propertyValue = assetInfo.propertyValue;\\n        tokenPriceInMatics = assetInfo.tokenPrice;\\n        //uint256 amount = BigNumber.from(input).mul(BigNumber.from(10).pow(decimals));\\n        //totalTokens = propertyValue/_tokenPrice;\\n\\n        _mint(msg.sender, assetInfo.numberOfTokens);\\n        assetDetails[result] = assetInfo;\\n        details[result] = assetInfo2;\\n        assetIds.push(result);\\n        //assetDetails.push(assetInfo);\\n        //tokenPrice = _tokenPrice;\\n        emit Mint(msg.sender, assetInfo.numberOfTokens, assetInfo);\\n\\n    }\\n    // function getTotalTokens() public view returns (uint256) {\\n    //     return totalTokens;\\n    // }\\n    function getAssetDetails(string memory _query) public view returns(AssetDetails memory) {\\n        \\n        return assetDetails[_query];\\n\\n        \\n    }\\n    function getAllAssetDetails() external view returns (AssetDetails[] memory,Details[] memory) {\\n        AssetDetails[] memory allDetails = new AssetDetails[](assetIds.length);\\n        Details[] memory allDetails2 = new Details[](assetIds.length);\\n        for (uint256 i = 0; i < assetIds.length; i++) {\\n            string memory assetId = assetIds[i];\\n            allDetails[i] = assetDetails[assetId];\\n            allDetails2[i] = details[assetId];\\n        }\\n        return (allDetails, allDetails2);\\n    }\\n    \\n    function addInvestments(string memory _query, uint256 _tokensPurchase, address _userAddress)public {\\n        InvestmentDetails memory newInvestment = InvestmentDetails(_tokensPurchase, _query, _userAddress);\\n\\n        investments[nextInvestmentId] = newInvestment;\\n        investmentIds.push(nextInvestmentId);\\n        nextInvestmentId++;\\n\\n    }\\n    //getting all investments\\n    function getInvestments()public view returns(InvestmentDetails[] memory){\\n        InvestmentDetails[] memory allDetails = new InvestmentDetails[](nextInvestmentId);\\n        for (uint256 i = 0; i < investmentIds.length; i++) {\\n            uint256 investmentId = investmentIds[i];\\n            allDetails[i] = investments[investmentId];\\n          \\n\\n        }\\n        return allDetails;\\n    }\\n    // Burn tokens when the custodian needs to remove tokens from circulation\\n    function burn(address from, uint256 amount,string memory _query) external onlyOwner {\\n        _burn(from, amount);\\n        // Remove asset details when burning tokens\\n        delete assetDetails[_query];\\n        emit Burn(from, amount);\\n    }\\n\\n    // Update the custodian address\\n    // function updateCustodian(address newCustodian) external onlyOwner {\\n    //     custodian = newCustodian;\\n    // }\\n\\n    function approve(address spender, uint256 value) public override onlyOwner returns (bool) {\\n      \\n        return super.approve(spender, value);\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0xab5e1174e0609afa150465e87bd9ad5aaafda7b8e2b58cadd09272144b813db0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526001600a553480156200001657600080fd5b50604051620052a9380380620052a983398181016040528101906200003c91906200055b565b828281600390816200004f919062000836565b50806004908162000061919062000836565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506000600681905550620000c733670de0b6b3a764000083620000bb91906200094c565b620000d060201b60201c565b50505062000a9f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001455760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200013c9190620009dc565b60405180910390fd5b62000159600083836200015d60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001b3578060026000828254620001a69190620009f9565b9250508190555062000289565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000242578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002399392919062000a45565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002d4578060026000828254039250508190555062000321565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000380919062000a82565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003f682620003ab565b810181811067ffffffffffffffff82111715620004185762000417620003bc565b5b80604052505050565b60006200042d6200038d565b90506200043b8282620003eb565b919050565b600067ffffffffffffffff8211156200045e576200045d620003bc565b5b6200046982620003ab565b9050602081019050919050565b60005b838110156200049657808201518184015260208101905062000479565b60008484015250505050565b6000620004b9620004b38462000440565b62000421565b905082815260208101848484011115620004d857620004d7620003a6565b5b620004e584828562000476565b509392505050565b600082601f830112620005055762000504620003a1565b5b815162000517848260208601620004a2565b91505092915050565b6000819050919050565b620005358162000520565b81146200054157600080fd5b50565b60008151905062000555816200052a565b92915050565b60008060006060848603121562000577576200057662000397565b5b600084015167ffffffffffffffff8111156200059857620005976200039c565b5b620005a686828701620004ed565b935050602084015167ffffffffffffffff811115620005ca57620005c96200039c565b5b620005d886828701620004ed565b9250506040620005eb8682870162000544565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200064857607f821691505b6020821081036200065e576200065d62000600565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000689565b620006d4868362000689565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000717620007116200070b8462000520565b620006ec565b62000520565b9050919050565b6000819050919050565b6200073383620006f6565b6200074b62000742826200071e565b84845462000696565b825550505050565b600090565b6200076262000753565b6200076f81848462000728565b505050565b5b8181101562000797576200078b60008262000758565b60018101905062000775565b5050565b601f821115620007e657620007b08162000664565b620007bb8462000679565b81016020851015620007cb578190505b620007e3620007da8562000679565b83018262000774565b50505b505050565b600082821c905092915050565b60006200080b60001984600802620007eb565b1980831691505092915050565b6000620008268383620007f8565b9150826002028217905092915050565b6200084182620005f5565b67ffffffffffffffff8111156200085d576200085c620003bc565b5b6200086982546200062f565b620008768282856200079b565b600060209050601f831160018114620008ae576000841562000899578287015190505b620008a5858262000818565b86555062000915565b601f198416620008be8662000664565b60005b82811015620008e857848901518255600182019150602085019450602081019050620008c1565b8683101562000908578489015162000904601f891682620007f8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009598262000520565b9150620009668362000520565b9250828202620009768162000520565b9150828204841483151762000990576200098f6200091d565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009c48262000997565b9050919050565b620009d681620009b7565b82525050565b6000602082019050620009f36000830184620009cb565b92915050565b600062000a068262000520565b915062000a138362000520565b925082820190508082111562000a2e5762000a2d6200091d565b5b92915050565b62000a3f8162000520565b82525050565b600060608201905062000a5c6000830186620009cb565b62000a6b602083018562000a34565b62000a7a604083018462000a34565b949350505050565b600060208201905062000a99600083018462000a34565b92915050565b6080516147e062000ac9600039600081816105b40152818161092a01526109ca01526147e06000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806368fbe23e116100c3578063d624722d1161007c578063d624722d1461042d578063db6423941461044b578063dd62ed3e14610469578063e83a25c514610499578063f4155739146104c9578063fd345c8a146104e857610158565b806368fbe23e1461031457806370a082311461034457806387541ed61461037457806395d89b41146103a4578063a19556d4146103c2578063a9059cbb146103fd57610158565b806323b872dd1161011557806323b872dd1461021f5780632e5f44511461024f578063313ce5671461028a578063534e6e3e146102a85780635fe0debc146102c457806364c316bc146102f657610158565b806301e1d1141461015d57806306fdde031461017b578063088f991914610199578063095ea7b3146101b557806315f570dc146101e557806318160ddd14610201575b600080fd5b61016561051a565b6040516101729190612f54565b60405180910390f35b610183610520565b6040516101909190612fff565b60405180910390f35b6101b360048036038101906101ae919061356c565b6105b2565b005b6101cf60048036038101906101ca9190613642565b610926565b6040516101dc919061369d565b60405180910390f35b6101ff60048036038101906101fa91906136b8565b6109c8565b005b610209610b44565b6040516102169190612f54565b60405180910390f35b61023960048036038101906102349190613727565b610b4e565b604051610246919061369d565b60405180910390f35b6102696004803603810190610264919061377a565b610b7d565b6040516102819c9b9a999897969594939291906137c3565b60405180910390f35b610292610d03565b60405161029f91906138a7565b60405180910390f35b6102c260048036038101906102bd91906138c2565b610d0c565b005b6102de60048036038101906102d99190613931565b610e0a565b6040516102ed93929190613980565b60405180910390f35b6102fe610ef5565b60405161030b9190612f54565b60405180910390f35b61032e6004803603810190610329919061377a565b610efb565b60405161033b9190613b22565b60405180910390f35b61035e60048036038101906103599190613b44565b6110bc565b60405161036b9190612f54565b60405180910390f35b61038e60048036038101906103899190613b71565b611104565b60405161039b9190612fff565b60405180910390f35b6103ac6111b0565b6040516103b99190612fff565b60405180910390f35b6103dc60048036038101906103d7919061377a565b611242565b6040516103f49c9b9a99989796959493929190613b9e565b60405180910390f35b61041760048036038101906104129190613642565b611918565b604051610424919061369d565b60405180910390f35b61043561193b565b6040516104429190613dcd565b60405180910390f35b610453611b14565b6040516104609190612f54565b60405180910390f35b610483600480360381019061047e9190613def565b611b1a565b6040516104909190612f54565b60405180910390f35b6104b360048036038101906104ae9190613b71565b611ba1565b6040516104c09190612f54565b60405180910390f35b6104d1611bc5565b6040516104df92919061420f565b60405180910390f35b61050260048036038101906104fd9190613b71565b61264e565b60405161051193929190613980565b60405180910390f35b60065481565b60606003805461052f90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461055b90614275565b80156105a85780601f1061057d576101008083540402835291602001916105a8565b820191906000526020600020905b81548152906001019060200180831161058b57829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610640576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610637906142f2565b60405180910390fd5b60008260000151905060008360200151905060008282604051602001610667929190614359565b6040516020818303038152906040529050600081905060016006600082825461069091906143ac565b925050819055508561010001516005819055506106b1338760e00151612720565b856007826040516106c2919061441c565b908152602001604051809103902060008201518160000190816106e591906145df565b5060208201518160010190816106fb91906145df565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015590505084600882604051610778919061441c565b9081526020016040518091039020600082015181600001908161079b91906145df565b5060208201518160010190816107b191906145df565b5060408201518160020190816107c791906145df565b5060608201518160030190816107dd91906145df565b5060808201518160040190816107f391906145df565b5060a082015181600501908161080991906145df565b5060c082015181600601908161081f91906145df565b5060e082015181600701908161083591906145df565b5061010082015181600801908161084c91906145df565b5061012082015181600901908161086391906145df565b5061014082015181600a01908161087a91906145df565b5061016082015181600b01908161089191906145df565b50905050600c819080600181540180825580915050600190039060005260206000200160009091909190915090816108c991906145df565b503373ffffffffffffffffffffffffffffffffffffffff167f74bf866b31634e4aab0772ba706bad039b88deb1649eb0c95bd0687ed902d84e8760e00151886040516109169291906146b1565b60405180910390a2505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad906142f2565b60405180910390fd5b6109c083836127a2565b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d906142f2565b60405180910390fd5b610a6083836127c5565b600781604051610a70919061441c565b908152602001604051809103902060008082016000610a8f9190612de5565b600182016000610a9f9190612de5565b60028201600090556003820160009055600482016000905560058201600090556006820160009055600782016000905560088201600090556009820160009055600a820160009055600b82016000905550508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca583604051610b379190612f54565b60405180910390a2505050565b6000600254905090565b600080610b59612847565b9050610b6685828561284f565b610b718585856128e3565b60019150509392505050565b600781805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054610bb690614275565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290614275565b8015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b505050505090806001018054610c4490614275565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7090614275565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b50505050509080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a01549080600b015490508c565b60006012905090565b600060405180606001604052808481526020018581526020018373ffffffffffffffffffffffffffffffffffffffff1681525090508060096000600a548152602001908152602001600020600082015181600001556020820151816001019081610d7691906145df565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600d600a549080600181540180825580915050600190039060005260206000200160009091909190915055600a6000815480929190610dff906146e1565b919050555050505050565b600b8281548110610e1a57600080fd5b9060005260206000200160205280600052604060002060009150915050806000015490806001018054610e4c90614275565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7890614275565b8015610ec55780601f10610e9a57610100808354040283529160200191610ec5565b820191906000526020600020905b815481529060010190602001808311610ea857829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60055481565b610f03612e25565b600782604051610f13919061441c565b908152602001604051809103902060405180610180016040529081600082018054610f3d90614275565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6990614275565b8015610fb65780601f10610f8b57610100808354040283529160200191610fb6565b820191906000526020600020905b815481529060010190602001808311610f9957829003601f168201915b50505050508152602001600182018054610fcf90614275565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffb90614275565b80156110485780601f1061101d57610100808354040283529160200191611048565b820191906000526020600020905b81548152906001019060200180831161102b57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b820154815250509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c818154811061111457600080fd5b90600052602060002001600091509050805461112f90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461115b90614275565b80156111a85780601f1061117d576101008083540402835291602001916111a8565b820191906000526020600020905b81548152906001019060200180831161118b57829003601f168201915b505050505081565b6060600480546111bf90614275565b80601f01602080910402602001604051908101604052809291908181526020018280546111eb90614275565b80156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b5050505050905090565b60088180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461127b90614275565b80601f01602080910402602001604051908101604052809291908181526020018280546112a790614275565b80156112f45780601f106112c9576101008083540402835291602001916112f4565b820191906000526020600020905b8154815290600101906020018083116112d757829003601f168201915b50505050509080600101805461130990614275565b80601f016020809104026020016040519081016040528092919081815260200182805461133590614275565b80156113825780601f1061135757610100808354040283529160200191611382565b820191906000526020600020905b81548152906001019060200180831161136557829003601f168201915b50505050509080600201805461139790614275565b80601f01602080910402602001604051908101604052809291908181526020018280546113c390614275565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b50505050509080600301805461142590614275565b80601f016020809104026020016040519081016040528092919081815260200182805461145190614275565b801561149e5780601f106114735761010080835404028352916020019161149e565b820191906000526020600020905b81548152906001019060200180831161148157829003601f168201915b5050505050908060040180546114b390614275565b80601f01602080910402602001604051908101604052809291908181526020018280546114df90614275565b801561152c5780601f106115015761010080835404028352916020019161152c565b820191906000526020600020905b81548152906001019060200180831161150f57829003601f168201915b50505050509080600501805461154190614275565b80601f016020809104026020016040519081016040528092919081815260200182805461156d90614275565b80156115ba5780601f1061158f576101008083540402835291602001916115ba565b820191906000526020600020905b81548152906001019060200180831161159d57829003601f168201915b5050505050908060060180546115cf90614275565b80601f01602080910402602001604051908101604052809291908181526020018280546115fb90614275565b80156116485780601f1061161d57610100808354040283529160200191611648565b820191906000526020600020905b81548152906001019060200180831161162b57829003601f168201915b50505050509080600701805461165d90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461168990614275565b80156116d65780601f106116ab576101008083540402835291602001916116d6565b820191906000526020600020905b8154815290600101906020018083116116b957829003601f168201915b5050505050908060080180546116eb90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461171790614275565b80156117645780601f1061173957610100808354040283529160200191611764565b820191906000526020600020905b81548152906001019060200180831161174757829003601f168201915b50505050509080600901805461177990614275565b80601f01602080910402602001604051908101604052809291908181526020018280546117a590614275565b80156117f25780601f106117c7576101008083540402835291602001916117f2565b820191906000526020600020905b8154815290600101906020018083116117d557829003601f168201915b50505050509080600a01805461180790614275565b80601f016020809104026020016040519081016040528092919081815260200182805461183390614275565b80156118805780601f1061185557610100808354040283529160200191611880565b820191906000526020600020905b81548152906001019060200180831161186357829003601f168201915b50505050509080600b01805461189590614275565b80601f01602080910402602001604051908101604052809291908181526020018280546118c190614275565b801561190e5780601f106118e35761010080835404028352916020019161190e565b820191906000526020600020905b8154815290600101906020018083116118f157829003601f168201915b505050505090508c565b600080611923612847565b90506119308185856128e3565b600191505092915050565b60606000600a5467ffffffffffffffff81111561195b5761195a61303a565b5b60405190808252806020026020018201604052801561199457816020015b611981612e86565b8152602001906001900390816119795790505b50905060005b600d80549050811015611b0c576000600d82815481106119bd576119bc614729565b5b906000526020600020015490506009600082815260200190815260200160002060405180606001604052908160008201548152602001600182018054611a0290614275565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2e90614275565b8015611a7b5780601f10611a5057610100808354040283529160200191611a7b565b820191906000526020600020905b815481529060010190602001808311611a5e57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110611aed57611aec614729565b5b6020026020010181905250508080611b04906146e1565b91505061199a565b508091505090565b600a5481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600d8181548110611bb157600080fd5b906000526020600020016000915090505481565b6060806000600c8054905067ffffffffffffffff811115611be957611be861303a565b5b604051908082528060200260200182016040528015611c2257816020015b611c0f612e25565b815260200190600190039081611c075790505b5090506000600c8054905067ffffffffffffffff811115611c4657611c4561303a565b5b604051908082528060200260200182016040528015611c7f57816020015b611c6c612ebd565b815260200190600190039081611c645790505b50905060005b600c80549050811015612641576000600c8281548110611ca857611ca7614729565b5b906000526020600020018054611cbd90614275565b80601f0160208091040260200160405190810160405280929190818152602001828054611ce990614275565b8015611d365780601f10611d0b57610100808354040283529160200191611d36565b820191906000526020600020905b815481529060010190602001808311611d1957829003601f168201915b50505050509050600781604051611d4d919061441c565b908152602001604051809103902060405180610180016040529081600082018054611d7790614275565b80601f0160208091040260200160405190810160405280929190818152602001828054611da390614275565b8015611df05780601f10611dc557610100808354040283529160200191611df0565b820191906000526020600020905b815481529060010190602001808311611dd357829003601f168201915b50505050508152602001600182018054611e0990614275565b80601f0160208091040260200160405190810160405280929190818152602001828054611e3590614275565b8015611e825780601f10611e5757610100808354040283529160200191611e82565b820191906000526020600020905b815481529060010190602001808311611e6557829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82015481525050848381518110611f0257611f01614729565b5b6020026020010181905250600881604051611f1d919061441c565b908152602001604051809103902060405180610180016040529081600082018054611f4790614275565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7390614275565b8015611fc05780601f10611f9557610100808354040283529160200191611fc0565b820191906000526020600020905b815481529060010190602001808311611fa357829003601f168201915b50505050508152602001600182018054611fd990614275565b80601f016020809104026020016040519081016040528092919081815260200182805461200590614275565b80156120525780601f1061202757610100808354040283529160200191612052565b820191906000526020600020905b81548152906001019060200180831161203557829003601f168201915b5050505050815260200160028201805461206b90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461209790614275565b80156120e45780601f106120b9576101008083540402835291602001916120e4565b820191906000526020600020905b8154815290600101906020018083116120c757829003601f168201915b505050505081526020016003820180546120fd90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461212990614275565b80156121765780601f1061214b57610100808354040283529160200191612176565b820191906000526020600020905b81548152906001019060200180831161215957829003601f168201915b5050505050815260200160048201805461218f90614275565b80601f01602080910402602001604051908101604052809291908181526020018280546121bb90614275565b80156122085780601f106121dd57610100808354040283529160200191612208565b820191906000526020600020905b8154815290600101906020018083116121eb57829003601f168201915b5050505050815260200160058201805461222190614275565b80601f016020809104026020016040519081016040528092919081815260200182805461224d90614275565b801561229a5780601f1061226f5761010080835404028352916020019161229a565b820191906000526020600020905b81548152906001019060200180831161227d57829003601f168201915b505050505081526020016006820180546122b390614275565b80601f01602080910402602001604051908101604052809291908181526020018280546122df90614275565b801561232c5780601f106123015761010080835404028352916020019161232c565b820191906000526020600020905b81548152906001019060200180831161230f57829003601f168201915b5050505050815260200160078201805461234590614275565b80601f016020809104026020016040519081016040528092919081815260200182805461237190614275565b80156123be5780601f10612393576101008083540402835291602001916123be565b820191906000526020600020905b8154815290600101906020018083116123a157829003601f168201915b505050505081526020016008820180546123d790614275565b80601f016020809104026020016040519081016040528092919081815260200182805461240390614275565b80156124505780601f1061242557610100808354040283529160200191612450565b820191906000526020600020905b81548152906001019060200180831161243357829003601f168201915b5050505050815260200160098201805461246990614275565b80601f016020809104026020016040519081016040528092919081815260200182805461249590614275565b80156124e25780601f106124b7576101008083540402835291602001916124e2565b820191906000526020600020905b8154815290600101906020018083116124c557829003601f168201915b50505050508152602001600a820180546124fb90614275565b80601f016020809104026020016040519081016040528092919081815260200182805461252790614275565b80156125745780601f1061254957610100808354040283529160200191612574565b820191906000526020600020905b81548152906001019060200180831161255757829003601f168201915b50505050508152602001600b8201805461258d90614275565b80601f01602080910402602001604051908101604052809291908181526020018280546125b990614275565b80156126065780601f106125db57610100808354040283529160200191612606565b820191906000526020600020905b8154815290600101906020018083116125e957829003601f168201915b50505050508152505083838151811061262257612621614729565b5b6020026020010181905250508080612639906146e1565b915050611c85565b5081819350935050509091565b600960205280600052604060002060009150905080600001549080600101805461267790614275565b80601f01602080910402602001604051908101604052809291908181526020018280546126a390614275565b80156126f05780601f106126c5576101008083540402835291602001916126f0565b820191906000526020600020905b8154815290600101906020018083116126d357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036127925760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016127899190614758565b60405180910390fd5b61279e600083836129d7565b5050565b6000806127ad612847565b90506127ba818585612bfc565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036128375760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161282e9190614758565b60405180910390fd5b612843826000836129d7565b5050565b600033905090565b600061285b8484611b1a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146128dd57818110156128cd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016128c493929190614773565b60405180910390fd5b6128dc84848484036000612c0e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036129555760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161294c9190614758565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036129c75760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016129be9190614758565b60405180910390fd5b6129d28383836129d7565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612a29578060026000828254612a1d91906143ac565b92505081905550612afc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612ab5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612aac93929190614773565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612b455780600260008282540392505081905550612b92565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612bef9190612f54565b60405180910390a3505050565b612c098383836001612c0e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612c805760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401612c779190614758565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612cf25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401612ce99190614758565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015612ddf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051612dd69190612f54565b60405180910390a35b50505050565b508054612df190614275565b6000825580601f10612e035750612e22565b601f016020900490600052602060002090810190612e219190612f1e565b5b50565b6040518061018001604052806060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180606001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518061018001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5b80821115612f37576000816000905550600101612f1f565b5090565b6000819050919050565b612f4e81612f3b565b82525050565b6000602082019050612f696000830184612f45565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fa9578082015181840152602081019050612f8e565b60008484015250505050565b6000601f19601f8301169050919050565b6000612fd182612f6f565b612fdb8185612f7a565b9350612feb818560208601612f8b565b612ff481612fb5565b840191505092915050565b600060208201905081810360008301526130198184612fc6565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61307282612fb5565b810181811067ffffffffffffffff821117156130915761309061303a565b5b80604052505050565b60006130a4613021565b90506130b08282613069565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156130df576130de61303a565b5b6130e882612fb5565b9050602081019050919050565b82818337600083830152505050565b6000613117613112846130c4565b61309a565b905082815260208101848484011115613133576131326130bf565b5b61313e8482856130f5565b509392505050565b600082601f83011261315b5761315a6130ba565b5b813561316b848260208601613104565b91505092915050565b61317d81612f3b565b811461318857600080fd5b50565b60008135905061319a81613174565b92915050565b600061018082840312156131b7576131b6613035565b5b6131c261018061309a565b9050600082013567ffffffffffffffff8111156131e2576131e16130b5565b5b6131ee84828501613146565b600083015250602082013567ffffffffffffffff811115613212576132116130b5565b5b61321e84828501613146565b60208301525060406132328482850161318b565b60408301525060606132468482850161318b565b606083015250608061325a8482850161318b565b60808301525060a061326e8482850161318b565b60a08301525060c06132828482850161318b565b60c08301525060e06132968482850161318b565b60e0830152506101006132ab8482850161318b565b610100830152506101206132c18482850161318b565b610120830152506101406132d78482850161318b565b610140830152506101606132ed8482850161318b565b6101608301525092915050565b6000610180828403121561331157613310613035565b5b61331c61018061309a565b9050600082013567ffffffffffffffff81111561333c5761333b6130b5565b5b61334884828501613146565b600083015250602082013567ffffffffffffffff81111561336c5761336b6130b5565b5b61337884828501613146565b602083015250604082013567ffffffffffffffff81111561339c5761339b6130b5565b5b6133a884828501613146565b604083015250606082013567ffffffffffffffff8111156133cc576133cb6130b5565b5b6133d884828501613146565b606083015250608082013567ffffffffffffffff8111156133fc576133fb6130b5565b5b61340884828501613146565b60808301525060a082013567ffffffffffffffff81111561342c5761342b6130b5565b5b61343884828501613146565b60a08301525060c082013567ffffffffffffffff81111561345c5761345b6130b5565b5b61346884828501613146565b60c08301525060e082013567ffffffffffffffff81111561348c5761348b6130b5565b5b61349884828501613146565b60e08301525061010082013567ffffffffffffffff8111156134bd576134bc6130b5565b5b6134c984828501613146565b6101008301525061012082013567ffffffffffffffff8111156134ef576134ee6130b5565b5b6134fb84828501613146565b6101208301525061014082013567ffffffffffffffff811115613521576135206130b5565b5b61352d84828501613146565b6101408301525061016082013567ffffffffffffffff811115613553576135526130b5565b5b61355f84828501613146565b6101608301525092915050565b600080604083850312156135835761358261302b565b5b600083013567ffffffffffffffff8111156135a1576135a0613030565b5b6135ad858286016131a0565b925050602083013567ffffffffffffffff8111156135ce576135cd613030565b5b6135da858286016132fa565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061360f826135e4565b9050919050565b61361f81613604565b811461362a57600080fd5b50565b60008135905061363c81613616565b92915050565b600080604083850312156136595761365861302b565b5b60006136678582860161362d565b92505060206136788582860161318b565b9150509250929050565b60008115159050919050565b61369781613682565b82525050565b60006020820190506136b2600083018461368e565b92915050565b6000806000606084860312156136d1576136d061302b565b5b60006136df8682870161362d565b93505060206136f08682870161318b565b925050604084013567ffffffffffffffff81111561371157613710613030565b5b61371d86828701613146565b9150509250925092565b6000806000606084860312156137405761373f61302b565b5b600061374e8682870161362d565b935050602061375f8682870161362d565b92505060406137708682870161318b565b9150509250925092565b6000602082840312156137905761378f61302b565b5b600082013567ffffffffffffffff8111156137ae576137ad613030565b5b6137ba84828501613146565b91505092915050565b60006101808201905081810360008301526137de818f612fc6565b905081810360208301526137f2818e612fc6565b9050613801604083018d612f45565b61380e606083018c612f45565b61381b608083018b612f45565b61382860a083018a612f45565b61383560c0830189612f45565b61384260e0830188612f45565b613850610100830187612f45565b61385e610120830186612f45565b61386c610140830185612f45565b61387a610160830184612f45565b9d9c50505050505050505050505050565b600060ff82169050919050565b6138a18161388b565b82525050565b60006020820190506138bc6000830184613898565b92915050565b6000806000606084860312156138db576138da61302b565b5b600084013567ffffffffffffffff8111156138f9576138f8613030565b5b61390586828701613146565b93505060206139168682870161318b565b92505060406139278682870161362d565b9150509250925092565b600080604083850312156139485761394761302b565b5b60006139568582860161318b565b92505060206139678582860161318b565b9150509250929050565b61397a81613604565b82525050565b60006060820190506139956000830186612f45565b81810360208301526139a78185612fc6565b90506139b66040830184613971565b949350505050565b600082825260208201905092915050565b60006139da82612f6f565b6139e481856139be565b93506139f4818560208601612f8b565b6139fd81612fb5565b840191505092915050565b613a1181612f3b565b82525050565b6000610180830160008301518482036000860152613a3582826139cf565b91505060208301518482036020860152613a4f82826139cf565b9150506040830151613a646040860182613a08565b506060830151613a776060860182613a08565b506080830151613a8a6080860182613a08565b5060a0830151613a9d60a0860182613a08565b5060c0830151613ab060c0860182613a08565b5060e0830151613ac360e0860182613a08565b50610100830151613ad8610100860182613a08565b50610120830151613aed610120860182613a08565b50610140830151613b02610140860182613a08565b50610160830151613b17610160860182613a08565b508091505092915050565b60006020820190508181036000830152613b3c8184613a17565b905092915050565b600060208284031215613b5a57613b5961302b565b5b6000613b688482850161362d565b91505092915050565b600060208284031215613b8757613b8661302b565b5b6000613b958482850161318b565b91505092915050565b6000610180820190508181036000830152613bb9818f612fc6565b90508181036020830152613bcd818e612fc6565b90508181036040830152613be1818d612fc6565b90508181036060830152613bf5818c612fc6565b90508181036080830152613c09818b612fc6565b905081810360a0830152613c1d818a612fc6565b905081810360c0830152613c318189612fc6565b905081810360e0830152613c458188612fc6565b9050818103610100830152613c5a8187612fc6565b9050818103610120830152613c6f8186612fc6565b9050818103610140830152613c848185612fc6565b9050818103610160830152613c998184612fc6565b90509d9c50505050505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ce181613604565b82525050565b6000606083016000830151613cff6000860182613a08565b5060208301518482036020860152613d1782826139cf565b9150506040830151613d2c6040860182613cd8565b508091505092915050565b6000613d438383613ce7565b905092915050565b6000602082019050919050565b6000613d6382613cac565b613d6d8185613cb7565b935083602082028501613d7f85613cc8565b8060005b85811015613dbb5784840389528151613d9c8582613d37565b9450613da783613d4b565b925060208a01995050600181019050613d83565b50829750879550505050505092915050565b60006020820190508181036000830152613de78184613d58565b905092915050565b60008060408385031215613e0657613e0561302b565b5b6000613e148582860161362d565b9250506020613e258582860161362d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610180830160008301518482036000860152613e7982826139cf565b91505060208301518482036020860152613e9382826139cf565b9150506040830151613ea86040860182613a08565b506060830151613ebb6060860182613a08565b506080830151613ece6080860182613a08565b5060a0830151613ee160a0860182613a08565b5060c0830151613ef460c0860182613a08565b5060e0830151613f0760e0860182613a08565b50610100830151613f1c610100860182613a08565b50610120830151613f31610120860182613a08565b50610140830151613f46610140860182613a08565b50610160830151613f5b610160860182613a08565b508091505092915050565b6000613f728383613e5b565b905092915050565b6000602082019050919050565b6000613f9282613e2f565b613f9c8185613e3a565b935083602082028501613fae85613e4b565b8060005b85811015613fea5784840389528151613fcb8582613f66565b9450613fd683613f7a565b925060208a01995050600181019050613fb2565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061018083016000830151848203600086015261404682826139cf565b9150506020830151848203602086015261406082826139cf565b9150506040830151848203604086015261407a82826139cf565b9150506060830151848203606086015261409482826139cf565b915050608083015184820360808601526140ae82826139cf565b91505060a083015184820360a08601526140c882826139cf565b91505060c083015184820360c08601526140e282826139cf565b91505060e083015184820360e08601526140fc82826139cf565b91505061010083015184820361010086015261411882826139cf565b91505061012083015184820361012086015261413482826139cf565b91505061014083015184820361014086015261415082826139cf565b91505061016083015184820361016086015261416c82826139cf565b9150508091505092915050565b60006141858383614028565b905092915050565b6000602082019050919050565b60006141a582613ffc565b6141af8185614007565b9350836020820285016141c185614018565b8060005b858110156141fd57848403895281516141de8582614179565b94506141e98361418d565b925060208a019950506001810190506141c5565b50829750879550505050505092915050565b600060408201905081810360008301526142298185613f87565b9050818103602083015261423d818461419a565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061428d57607f821691505b6020821081036142a05761429f614246565b5b50919050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b60006142dc600d83612f7a565b91506142e7826142a6565b602082019050919050565b6000602082019050818103600083015261430b816142cf565b9050919050565b600081519050919050565b600081905092915050565b600061433382614312565b61433d818561431d565b935061434d818560208601612f8b565b80840191505092915050565b60006143658285614328565b91506143718284614328565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006143b782612f3b565b91506143c283612f3b565b92508282019050808211156143da576143d961437d565b5b92915050565b600081905092915050565b60006143f682612f6f565b61440081856143e0565b9350614410818560208601612f8b565b80840191505092915050565b600061442882846143eb565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026144957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614458565b61449f8683614458565b95508019841693508086168417925050509392505050565b6000819050919050565b60006144dc6144d76144d284612f3b565b6144b7565b612f3b565b9050919050565b6000819050919050565b6144f6836144c1565b61450a614502826144e3565b848454614465565b825550505050565b600090565b61451f614512565b61452a8184846144ed565b505050565b5b8181101561454e57614543600082614517565b600181019050614530565b5050565b601f8211156145935761456481614433565b61456d84614448565b8101602085101561457c578190505b61459061458885614448565b83018261452f565b50505b505050565b600082821c905092915050565b60006145b660001984600802614598565b1980831691505092915050565b60006145cf83836145a5565b9150826002028217905092915050565b6145e882612f6f565b67ffffffffffffffff8111156146015761460061303a565b5b61460b8254614275565b614616828285614552565b600060209050601f8311600181146146495760008415614637578287015190505b61464185826145c3565b8655506146a9565b601f19841661465786614433565b60005b8281101561467f5784890151825560018201915060208501945060208101905061465a565b8683101561469c5784890151614698601f8916826145a5565b8355505b6001600288020188555050505b505050505050565b60006040820190506146c66000830185612f45565b81810360208301526146d88184613a17565b90509392505050565b60006146ec82612f3b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361471e5761471d61437d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208201905061476d6000830184613971565b92915050565b60006060820190506147886000830186613971565b6147956020830185612f45565b6147a26040830184612f45565b94935050505056fea2646970667358221220b42fb80808e6c73c5f5a169248a16fef2a44740dcfaa8e5dab7e7b16833d542b64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 205,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 211,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 213,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 215,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 217,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 889,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "tokenPriceInMatics",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 891,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "totalAssets",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 896,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "assetDetails",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AssetDetails)851_storage)"
      },
      {
        "astId": 901,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "details",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Details)876_storage)"
      },
      {
        "astId": 906,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "investments",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(InvestmentDetails)883_storage)"
      },
      {
        "astId": 909,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "nextInvestmentId",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 915,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "investmentsArray",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_mapping(t_uint256,t_struct(InvestmentDetails)883_storage))dyn_storage"
      },
      {
        "astId": 918,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "assetIds",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 921,
        "contract": "contracts/NewToken.sol:AssetNewToken",
        "label": "investmentIds",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_mapping(t_uint256,t_struct(InvestmentDetails)883_storage))dyn_storage": {
        "base": "t_mapping(t_uint256,t_struct(InvestmentDetails)883_storage)",
        "encoding": "dynamic_array",
        "label": "mapping(uint256 => struct InvestmentDetails)[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AssetDetails)851_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct AssetDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(AssetDetails)851_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Details)876_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Details)",
        "numberOfBytes": "32",
        "value": "t_struct(Details)876_storage"
      },
      "t_mapping(t_uint256,t_struct(InvestmentDetails)883_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct InvestmentDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(InvestmentDetails)883_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AssetDetails)851_storage": {
        "encoding": "inplace",
        "label": "struct AssetDetails",
        "members": [
          {
            "astId": 828,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 830,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "direction",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 832,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 834,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "amountInterest",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 836,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "grossAnnualRent",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 838,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "netAmountRent",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 840,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "interestPayment",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 842,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "numberOfTokens",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 844,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "tokenPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 846,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "minInvestment",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 848,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "homeInterest",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 850,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "deadline",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Details)876_storage": {
        "encoding": "inplace",
        "label": "struct Details",
        "members": [
          {
            "astId": 853,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "secMarket",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 855,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "currency",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 857,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "neighood",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 859,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "yoc",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 861,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "elevator",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 863,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "buildedSurface",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 865,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "bedrooms",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 867,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "bathrooms",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 869,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "isRented",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 871,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "tokenName",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 873,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "description",
            "offset": 0,
            "slot": "10",
            "type": "t_string_storage"
          },
          {
            "astId": 875,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "dateCreated",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(InvestmentDetails)883_storage": {
        "encoding": "inplace",
        "label": "struct InvestmentDetails",
        "members": [
          {
            "astId": 878,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "tokenPurchase",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 880,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "query",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 882,
            "contract": "contracts/NewToken.sol:AssetNewToken",
            "label": "userAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}